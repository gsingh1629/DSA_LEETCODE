3Sum

given an integer find out all unique triplets that sum upto target

We can use a triple loop and check for sum
We can use two pointer approach for this (for this we need to first sort the elements after that only we can change index based on sum
i.e. whether to increase the index from left or right based on, if we want to increase or decrease the sum)

vector<vector<int>> threeSum(vector<int>& nums) {
    if(nums.size()<3){
        return {};
    }
    vector<vector<int>> res;
    sort(nums.begin(),nums.end());
    for(int i=0;i<nums.size();i++){
        if(i>0 && nums[i]==nums[i-1]){//to remove duplicates
            continue;
        }
        int left=i+1,right=nums.size()-1;
        while(left<right){
            int sum=nums[i]+nums[left]+nums[right];
            if(sum==0){
                res.push_back({nums[i],nums[left++],nums[right--]});
                while(left<right && nums[left]==nums[left-1]){//to remove duplicates
                    left++;
                }
                while(left<right && nums[right]==nums[right+1]){//to remove duplicates
                    right--;
                }
            }
            else if(sum<0){
                left++;
            }
            else{
                right--;
            }
        }
    }
    return res;
}

