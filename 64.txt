Minimum Path Sum

You are given a 2d matrix grid in which you can move either right or down you need to find the minimum path sum from 0,0  to row-1,col-1

int minPathSum(vector<vector<int>>& grid) {
    int rows=grid.size(),cols=grid[0].size();
    for(int i=0;i<rows;i++){
        for(int j=0;j<cols;j++){
            if(i==0 && j==0){
                continue;
            }
            if(i==0){
                grid[i][j]+=grid[i][j-1];
            }
            else if(j==0){
                grid[i][j]+=grid[i-1][j];
            }
            else{
                grid[i][j]+=min(grid[i-1][j],grid[i][j-1]);
            }
        }
    }
    for(int i=0;i<rows;i++){
        for(int j=0;j<cols;j++){
            cout<<grid[i][j]<<" ";
        }
        cout<<endl;
    }
    return grid[rows-1][cols-1];
}
